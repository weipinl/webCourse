//scope
1. By default, javascript function is under root scope / "window" object

2. if statement does NOT create new scope

3. ternary operator 
    A. condition ? exp1 : expr2;
        a. 
        function isUserValid(bool) {
            return bool;
        }

        var answer = isUserValid(true) ? "You may enter" : "Access Denied";

4. Can use https://babeljs.io/ (Babel) to generate browser-compatible JavaScript out

5. cons = you cannot reasign to a new variable

6. cons obj = {
    player: 'booby',
    experience: 100,
    wizardLevel: false
}

    A. you cannot reasign the obj (ex. obj = 5;), BUT, you can change the property of the obj (obj.wizardLevel = false);

7. template string
    A. you can use `` + ${someVariable} to output a string dynamically
    B. const greetingBest = `Hello ${name} you seem to be ${age - 10}. What a lovely ${pet} you have`;

8. default argument 

    function greet(name='', age=30, pet='cat'){
    return `Hello ${name} you seem to be ${age - 10}. What a lovely ${pet} you have`; 
} //would return "Hello  you seem to be 20. What a lovely cat you have" if no parameter is given

9. symbol 

// symbol are use to create unique type, so you are sure there won't be any conflict